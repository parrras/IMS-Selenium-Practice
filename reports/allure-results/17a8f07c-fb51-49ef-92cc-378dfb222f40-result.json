{"name": "Add Products and Generate Invoice in IMS Application", "status": "failed", "statusDetails": {"message": "Failed: ❌ Test failed due to: Message: element click intercepted: Element <button _ngcontent-yxy-c210=\"\" id=\"save\" class=\"btn mr-2 px-4\">...</button> is not clickable at point (1370, 12). Other element would receive the click: <div _ngcontent-yxy-c228=\"\" class=\"rightMenus\" style=\"float: right; margin-left: 10px; margin-top: 2px;\">...</div>\n  (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x6ffe43+66515]\n\tGetHandleVerifier [0x0x6ffe84+66580]\n\t(No symbol) [0x0x4edc48]\n\t(No symbol) [0x0x53ec10]\n\t(No symbol) [0x0x53cf73]\n\t(No symbol) [0x0x53aa17]\n\t(No symbol) [0x0x539c8d]\n\t(No symbol) [0x0x52e115]\n\t(No symbol) [0x0x55b1cc]\n\t(No symbol) [0x0x52db74]\n\t(No symbol) [0x0x55b384]\n\t(No symbol) [0x0x57cba7]\n\t(No symbol) [0x0x55afc6]\n\t(No symbol) [0x0x52c2ca]\n\t(No symbol) [0x0x52d154]\n\tGetHandleVerifier [0x0x957353+2521315]\n\tGetHandleVerifier [0x0x9522d3+2500707]\n\tGetHandleVerifier [0x0x727c94+229924]\n\tGetHandleVerifier [0x0x7181f8+165768]\n\tGetHandleVerifier [0x0x71ecad+193085]\n\tGetHandleVerifier [0x0x708158+100072]\n\tGetHandleVerifier [0x0x7082f0+100480]\n\tGetHandleVerifier [0x0x6f25aa+11066]\n\tBaseThreadInitThunk [0x0x75ca5d49+25]\n\tRtlInitializeExceptionChain [0x0x7793d6db+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f81be1a88ec760a69345723c5f35f7d\")>\n\n    @allure.title(\"Add Products and Generate Invoice in IMS Application\")\n    @allure.description(\"Logs in, navigates to Product Master, adds 10 products, and generates a purchase invoice.\")\n    def test_add_products(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 30)\n        login = Login(driver)\n    \n        try:\n            # --- Step 1: Login ---\n            driver.get(\"https://redmiims.variantqa.himshang.com.np/#/login\")\n            login.perform_login(\"Paras\", \"Ims@1234\")\n            print(\"✅ Logged into IMS\")\n    \n            # Optional: handle logout from previous session\n            try:\n                login.perform_logout()\n                login.perform_ok()\n            except Exception:\n                pass\n    \n            login.click_signin()\n            print(\"✅ Clicked Sign In\")\n    \n            # --- Step 2: Add Product Page ---\n            add_product = AddProductPage(driver)\n    \n            # Navigate to Add Product page\n            add_product.navigate_to_add_product()\n    \n            # Select Item Group\n            add_product.select_item_group()\n    \n            # Add 10 Products (first 5 inventory & ticked, last 5 service & unticked)\n>           add_product.add_multiple_products(count=10)\n\nPYTEST\\tests\\Product_test.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPYTEST\\pages\\Add_Product.py:99: in add_multiple_products\n    self.add_single_product(\nPYTEST\\pages\\Add_Product.py:192: in add_single_product\n    save_btn.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000287850B6FD0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...]\\\\n\\\\tRtlInitializeExceptionChain [0x0x7793d6db+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        Args:\n            response: The JSON response from the WebDriver server as a dictionary\n                object.\n    \n        Raises:\n            WebDriverException: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-yxy-c210=\"\" id=\"save\" class=\"btn mr-2 px-4\">...</button> is not clickable at point (1370, 12). Other element would receive the click: <div _ngcontent-yxy-c228=\"\" class=\"rightMenus\" style=\"float: right; margin-left: 10px; margin-top: 2px;\">...</div>\nE         (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x6ffe43+66515]\nE       \tGetHandleVerifier [0x0x6ffe84+66580]\nE       \t(No symbol) [0x0x4edc48]\nE       \t(No symbol) [0x0x53ec10]\nE       \t(No symbol) [0x0x53cf73]\nE       \t(No symbol) [0x0x53aa17]\nE       \t(No symbol) [0x0x539c8d]\nE       \t(No symbol) [0x0x52e115]\nE       \t(No symbol) [0x0x55b1cc]\nE       \t(No symbol) [0x0x52db74]\nE       \t(No symbol) [0x0x55b384]\nE       \t(No symbol) [0x0x57cba7]\nE       \t(No symbol) [0x0x55afc6]\nE       \t(No symbol) [0x0x52c2ca]\nE       \t(No symbol) [0x0x52d154]\nE       \tGetHandleVerifier [0x0x957353+2521315]\nE       \tGetHandleVerifier [0x0x9522d3+2500707]\nE       \tGetHandleVerifier [0x0x727c94+229924]\nE       \tGetHandleVerifier [0x0x7181f8+165768]\nE       \tGetHandleVerifier [0x0x71ecad+193085]\nE       \tGetHandleVerifier [0x0x708158+100072]\nE       \tGetHandleVerifier [0x0x7082f0+100480]\nE       \tGetHandleVerifier [0x0x6f25aa+11066]\nE       \tBaseThreadInitThunk [0x0x75ca5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7793d6db+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:233: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9f81be1a88ec760a69345723c5f35f7d\")>\n\n    @allure.title(\"Add Products and Generate Invoice in IMS Application\")\n    @allure.description(\"Logs in, navigates to Product Master, adds 10 products, and generates a purchase invoice.\")\n    def test_add_products(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 30)\n        login = Login(driver)\n    \n        try:\n            # --- Step 1: Login ---\n            driver.get(\"https://redmiims.variantqa.himshang.com.np/#/login\")\n            login.perform_login(\"Paras\", \"Ims@1234\")\n            print(\"✅ Logged into IMS\")\n    \n            # Optional: handle logout from previous session\n            try:\n                login.perform_logout()\n                login.perform_ok()\n            except Exception:\n                pass\n    \n            login.click_signin()\n            print(\"✅ Clicked Sign In\")\n    \n            # --- Step 2: Add Product Page ---\n            add_product = AddProductPage(driver)\n    \n            # Navigate to Add Product page\n            add_product.navigate_to_add_product()\n    \n            # Select Item Group\n            add_product.select_item_group()\n    \n            # Add 10 Products (first 5 inventory & ticked, last 5 service & unticked)\n            add_product.add_multiple_products(count=10)\n    \n        except Exception as e:\n            # Capture screenshot and log error details for Allure\n            allure.attach(driver.get_screenshot_as_png(), name=\"Error Screenshot\", attachment_type=allure.attachment_type.PNG)\n            allure.attach(str(e), name=\"Error Details\", attachment_type=allure.attachment_type.TEXT)\n>           pytest.fail(f\"❌ Test failed due to: {e}\")\nE           Failed: ❌ Test failed due to: Message: element click intercepted: Element <button _ngcontent-yxy-c210=\"\" id=\"save\" class=\"btn mr-2 px-4\">...</button> is not clickable at point (1370, 12). Other element would receive the click: <div _ngcontent-yxy-c228=\"\" class=\"rightMenus\" style=\"float: right; margin-left: 10px; margin-top: 2px;\">...</div>\nE             (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x6ffe43+66515]\nE           \tGetHandleVerifier [0x0x6ffe84+66580]\nE           \t(No symbol) [0x0x4edc48]\nE           \t(No symbol) [0x0x53ec10]\nE           \t(No symbol) [0x0x53cf73]\nE           \t(No symbol) [0x0x53aa17]\nE           \t(No symbol) [0x0x539c8d]\nE           \t(No symbol) [0x0x52e115]\nE           \t(No symbol) [0x0x55b1cc]\nE           \t(No symbol) [0x0x52db74]\nE           \t(No symbol) [0x0x55b384]\nE           \t(No symbol) [0x0x57cba7]\nE           \t(No symbol) [0x0x55afc6]\nE           \t(No symbol) [0x0x52c2ca]\nE           \t(No symbol) [0x0x52d154]\nE           \tGetHandleVerifier [0x0x957353+2521315]\nE           \tGetHandleVerifier [0x0x9522d3+2500707]\nE           \tGetHandleVerifier [0x0x727c94+229924]\nE           \tGetHandleVerifier [0x0x7181f8+165768]\nE           \tGetHandleVerifier [0x0x71ecad+193085]\nE           \tGetHandleVerifier [0x0x708158+100072]\nE           \tGetHandleVerifier [0x0x7082f0+100480]\nE           \tGetHandleVerifier [0x0x6f25aa+11066]\nE           \tBaseThreadInitThunk [0x0x75ca5d49+25]\nE           \tRtlInitializeExceptionChain [0x0x7793d6db+107]\nE           \tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\n\nPYTEST\\tests\\Product_test.py:48: Failed"}, "description": "Logs in, navigates to Product Master, adds 10 products, and generates a purchase invoice.", "steps": [{"name": "Navigate to Add Product page", "status": "passed", "start": 1761910069587, "stop": 1761910082874}, {"name": "Select Item Group as BODY CARE", "status": "passed", "start": 1761910082874, "stop": 1761910085025}, {"name": "Add 10 random products (first 5: inventory & ticked, next 5: service & unticked)", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-yxy-c210=\"\" id=\"save\" class=\"btn mr-2 px-4\">...</button> is not clickable at point (1370, 12). Other element would receive the click: <div _ngcontent-yxy-c228=\"\" class=\"rightMenus\" style=\"float: right; margin-left: 10px; margin-top: 2px;\">...</div>\n  (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x6ffe43+66515]\n\tGetHandleVerifier [0x0x6ffe84+66580]\n\t(No symbol) [0x0x4edc48]\n\t(No symbol) [0x0x53ec10]\n\t(No symbol) [0x0x53cf73]\n\t(No symbol) [0x0x53aa17]\n\t(No symbol) [0x0x539c8d]\n\t(No symbol) [0x0x52e115]\n\t(No symbol) [0x0x55b1cc]\n\t(No symbol) [0x0x52db74]\n\t(No symbol) [0x0x55b384]\n\t(No symbol) [0x0x57cba7]\n\t(No symbol) [0x0x55afc6]\n\t(No symbol) [0x0x52c2ca]\n\t(No symbol) [0x0x52d154]\n\tGetHandleVerifier [0x0x957353+2521315]\n\tGetHandleVerifier [0x0x9522d3+2500707]\n\tGetHandleVerifier [0x0x727c94+229924]\n\tGetHandleVerifier [0x0x7181f8+165768]\n\tGetHandleVerifier [0x0x71ecad+193085]\n\tGetHandleVerifier [0x0x708158+100072]\n\tGetHandleVerifier [0x0x7082f0+100480]\n\tGetHandleVerifier [0x0x6f25aa+11066]\n\tBaseThreadInitThunk [0x0x75ca5d49+25]\n\tRtlInitializeExceptionChain [0x0x7793d6db+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\n\n", "trace": "  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"D:\\Code Playground\\Selenium Tutorial\\PYTEST\\pages\\Add_Product.py\", line 99, in add_multiple_products\n    self.add_single_product(\n    ~~~~~~~~~~~~~~~~~~~~~~~^\n        product_name, hs_code, stock_unit, purchase_price, sales_price,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        barcode, supplier, untick_checkbox, change_to_service\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"D:\\Code Playground\\Selenium Tutorial\\PYTEST\\pages\\Add_Product.py\", line 192, in add_single_product\n    save_btn.click()\n    ~~~~~~~~~~~~~~^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 233, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "attachments": [{"name": "Product Info", "source": "7b55b52b-8e70-45b4-8d55-e44cfd735d6d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "count", "value": "10"}], "start": 1761910085025, "stop": 1761910099299}], "attachments": [{"name": "Error Screenshot", "source": "036173ac-51d6-4b17-94ff-b2b18d0de084-attachment.png", "type": "image/png"}, {"name": "Error Details", "source": "bfb281b1-6572-4ddb-803f-7ed5cbab2b56-attachment.txt", "type": "text/plain"}, {"name": "Screenshot_test_add_products", "source": "ab893734-7dfa-491a-b6bc-3821961a9410-attachment.png", "type": "image/png"}], "start": 1761910056814, "stop": 1761910099499, "uuid": "a28d1877-af46-47ae-adbb-cfb0518b1bba", "historyId": "b28a101b801c552cf3b186052a81a889", "testCaseId": "b28a101b801c552cf3b186052a81a889", "fullName": "PYTEST.tests.Product_test#test_add_products", "labels": [{"name": "parentSuite", "value": "PYTEST.tests"}, {"name": "suite", "value": "Product_test"}, {"name": "host", "value": "DESKTOP-FK66NC3"}, {"name": "thread", "value": "17364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "PYTEST.tests.Product_test"}], "titlePath": ["PYTEST", "tests", "Product_test.py"]}