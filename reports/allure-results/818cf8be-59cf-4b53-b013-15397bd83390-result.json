{"name": "Add Products and Generate Invoice in IMS Application", "status": "failed", "statusDetails": {"message": "Failed: ❌ Purchase Invoice test failed due to: Message: element click intercepted: Element <button _ngcontent-hgw-c395=\"\" class=\"btn btn-info pull-right ng-star-inserted\" style=\"margin: 0px 4px;\">...</button> is not clickable at point (1325, 80). Other element would receive the click: <div _ngcontent-hgw-c233=\"\" bsmodal=\"\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"false\" class=\"modal fade in show\" style=\"z-index: 2147483647; height: 100%; background: rgba(0, 0, 0, 0.43); display: block;\" aria-modal=\"true\">...</div>\n  (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x9ffe43+66515]\n\tGetHandleVerifier [0x0x9ffe84+66580]\n\t(No symbol) [0x0x7edc48]\n\t(No symbol) [0x0x83ec10]\n\t(No symbol) [0x0x83cf73]\n\t(No symbol) [0x0x83aa17]\n\t(No symbol) [0x0x839c8d]\n\t(No symbol) [0x0x82e115]\n\t(No symbol) [0x0x85b1cc]\n\t(No symbol) [0x0x82db74]\n\t(No symbol) [0x0x85b384]\n\t(No symbol) [0x0x87cba7]\n\t(No symbol) [0x0x85afc6]\n\t(No symbol) [0x0x82c2ca]\n\t(No symbol) [0x0x82d154]\n\tGetHandleVerifier [0x0xc57353+2521315]\n\tGetHandleVerifier [0x0xc522d3+2500707]\n\tGetHandleVerifier [0x0xa27c94+229924]\n\tGetHandleVerifier [0x0xa181f8+165768]\n\tGetHandleVerifier [0x0xa1ecad+193085]\n\tGetHandleVerifier [0x0xa08158+100072]\n\tGetHandleVerifier [0x0xa082f0+100480]\n\tGetHandleVerifier [0x0x9f25aa+11066]\n\tBaseThreadInitThunk [0x0x75ca5d49+25]\n\tRtlInitializeExceptionChain [0x0x7793d6db+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1f4180db6b0b03e6269bd96d2f82da59\")>\n\n    @allure.title(\"Add Products and Generate Invoice in IMS Application\")\n    @allure.description(\"Logs in, navigates to Product Master, adds 10 products, and generates a purchase invoice.\")\n    def test_generate_purchase_invoice(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 30)\n        login = Login(driver)\n    \n        try:\n            # --- Step 1: Login ---\n            driver.get(\"https://redmiims.variantqa.himshang.com.np/#/login\")\n            login.perform_login(\"Paras\", \"Ims@1234\")\n            print(\"✅ Logged into IMS\")\n    \n            # Optional: handle logout from previous session\n            try:\n                login.perform_logout()\n                login.perform_ok()\n            except Exception:\n                pass\n    \n            login.click_signin()\n            print(\"✅ Clicked Sign In\")\n    \n            invoice_page = PurchaseInvoicePage(driver)\n    \n            # --- Step 1: Navigate and Generate Invoice ---\n>           invoice_page.generate_invoice()\n\nPYTEST\\tests\\Purchase_Inv_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPYTEST\\pages\\Purchase_Invoice.py:88: in generate_invoice\n    save_invoice_btn.click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:119: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:572: in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:458: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000288CFAF6E90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...]\\\\n\\\\tRtlInitializeExceptionChain [0x0x7793d6db+107]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\\\\n\"}}'}\n\n    def check_response(self, response: dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        Args:\n            response: The JSON response from the WebDriver server as a dictionary\n                object.\n    \n        Raises:\n            WebDriverException: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                try:\n                    value = json.loads(value_json)\n                    if isinstance(value, dict):\n                        if len(value) == 1:\n                            value = value[\"value\"]\n                        status = value.get(\"error\", None)\n                        if not status:\n                            status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                            message = value.get(\"value\") or value.get(\"message\")\n                            if not isinstance(message, str):\n                                value = message\n                                message = message.get(\"message\") if isinstance(message, dict) else None\n                        else:\n                            message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-hgw-c395=\"\" class=\"btn btn-info pull-right ng-star-inserted\" style=\"margin: 0px 4px;\">...</button> is not clickable at point (1325, 80). Other element would receive the click: <div _ngcontent-hgw-c233=\"\" bsmodal=\"\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"false\" class=\"modal fade in show\" style=\"z-index: 2147483647; height: 100%; background: rgba(0, 0, 0, 0.43); display: block;\" aria-modal=\"true\">...</div>\nE         (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x9ffe43+66515]\nE       \tGetHandleVerifier [0x0x9ffe84+66580]\nE       \t(No symbol) [0x0x7edc48]\nE       \t(No symbol) [0x0x83ec10]\nE       \t(No symbol) [0x0x83cf73]\nE       \t(No symbol) [0x0x83aa17]\nE       \t(No symbol) [0x0x839c8d]\nE       \t(No symbol) [0x0x82e115]\nE       \t(No symbol) [0x0x85b1cc]\nE       \t(No symbol) [0x0x82db74]\nE       \t(No symbol) [0x0x85b384]\nE       \t(No symbol) [0x0x87cba7]\nE       \t(No symbol) [0x0x85afc6]\nE       \t(No symbol) [0x0x82c2ca]\nE       \t(No symbol) [0x0x82d154]\nE       \tGetHandleVerifier [0x0xc57353+2521315]\nE       \tGetHandleVerifier [0x0xc522d3+2500707]\nE       \tGetHandleVerifier [0x0xa27c94+229924]\nE       \tGetHandleVerifier [0x0xa181f8+165768]\nE       \tGetHandleVerifier [0x0xa1ecad+193085]\nE       \tGetHandleVerifier [0x0xa08158+100072]\nE       \tGetHandleVerifier [0x0xa082f0+100480]\nE       \tGetHandleVerifier [0x0x9f25aa+11066]\nE       \tBaseThreadInitThunk [0x0x75ca5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7793d6db+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:233: ElementClickInterceptedException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1f4180db6b0b03e6269bd96d2f82da59\")>\n\n    @allure.title(\"Add Products and Generate Invoice in IMS Application\")\n    @allure.description(\"Logs in, navigates to Product Master, adds 10 products, and generates a purchase invoice.\")\n    def test_generate_purchase_invoice(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 30)\n        login = Login(driver)\n    \n        try:\n            # --- Step 1: Login ---\n            driver.get(\"https://redmiims.variantqa.himshang.com.np/#/login\")\n            login.perform_login(\"Paras\", \"Ims@1234\")\n            print(\"✅ Logged into IMS\")\n    \n            # Optional: handle logout from previous session\n            try:\n                login.perform_logout()\n                login.perform_ok()\n            except Exception:\n                pass\n    \n            login.click_signin()\n            print(\"✅ Clicked Sign In\")\n    \n            invoice_page = PurchaseInvoicePage(driver)\n    \n            # --- Step 1: Navigate and Generate Invoice ---\n            invoice_page.generate_invoice()\n            print(\"🧾 Purchase invoice generated successfully.\")\n    \n        except Exception as e:\n            # Capture screenshot and log error details for Allure\n            allure.attach(driver.get_screenshot_as_png(), name=\"Error Screenshot\",\n                          attachment_type=allure.attachment_type.PNG)\n            allure.attach(str(e), name=\"Error Details\", attachment_type=allure.attachment_type.TEXT)\n>           pytest.fail(f\"❌ Purchase Invoice test failed due to: {e}\")\nE           Failed: ❌ Purchase Invoice test failed due to: Message: element click intercepted: Element <button _ngcontent-hgw-c395=\"\" class=\"btn btn-info pull-right ng-star-inserted\" style=\"margin: 0px 4px;\">...</button> is not clickable at point (1325, 80). Other element would receive the click: <div _ngcontent-hgw-c233=\"\" bsmodal=\"\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"false\" class=\"modal fade in show\" style=\"z-index: 2147483647; height: 100%; background: rgba(0, 0, 0, 0.43); display: block;\" aria-modal=\"true\">...</div>\nE             (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nE           Stacktrace:\nE           \tGetHandleVerifier [0x0x9ffe43+66515]\nE           \tGetHandleVerifier [0x0x9ffe84+66580]\nE           \t(No symbol) [0x0x7edc48]\nE           \t(No symbol) [0x0x83ec10]\nE           \t(No symbol) [0x0x83cf73]\nE           \t(No symbol) [0x0x83aa17]\nE           \t(No symbol) [0x0x839c8d]\nE           \t(No symbol) [0x0x82e115]\nE           \t(No symbol) [0x0x85b1cc]\nE           \t(No symbol) [0x0x82db74]\nE           \t(No symbol) [0x0x85b384]\nE           \t(No symbol) [0x0x87cba7]\nE           \t(No symbol) [0x0x85afc6]\nE           \t(No symbol) [0x0x82c2ca]\nE           \t(No symbol) [0x0x82d154]\nE           \tGetHandleVerifier [0x0xc57353+2521315]\nE           \tGetHandleVerifier [0x0xc522d3+2500707]\nE           \tGetHandleVerifier [0x0xa27c94+229924]\nE           \tGetHandleVerifier [0x0xa181f8+165768]\nE           \tGetHandleVerifier [0x0xa1ecad+193085]\nE           \tGetHandleVerifier [0x0xa08158+100072]\nE           \tGetHandleVerifier [0x0xa082f0+100480]\nE           \tGetHandleVerifier [0x0x9f25aa+11066]\nE           \tBaseThreadInitThunk [0x0x75ca5d49+25]\nE           \tRtlInitializeExceptionChain [0x0x7793d6db+107]\nE           \tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\n\nPYTEST\\tests\\Purchase_Inv_test.py:43: Failed"}, "description": "Logs in, navigates to Product Master, adds 10 products, and generates a purchase invoice.", "steps": [{"name": "Generate purchase invoice from CSV products", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button _ngcontent-hgw-c395=\"\" class=\"btn btn-info pull-right ng-star-inserted\" style=\"margin: 0px 4px;\">...</button> is not clickable at point (1325, 80). Other element would receive the click: <div _ngcontent-hgw-c233=\"\" bsmodal=\"\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"false\" class=\"modal fade in show\" style=\"z-index: 2147483647; height: 100%; background: rgba(0, 0, 0, 0.43); display: block;\" aria-modal=\"true\">...</div>\n  (Session info: chrome=141.0.7390.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#elementclickinterceptedexception\nStacktrace:\n\tGetHandleVerifier [0x0x9ffe43+66515]\n\tGetHandleVerifier [0x0x9ffe84+66580]\n\t(No symbol) [0x0x7edc48]\n\t(No symbol) [0x0x83ec10]\n\t(No symbol) [0x0x83cf73]\n\t(No symbol) [0x0x83aa17]\n\t(No symbol) [0x0x839c8d]\n\t(No symbol) [0x0x82e115]\n\t(No symbol) [0x0x85b1cc]\n\t(No symbol) [0x0x82db74]\n\t(No symbol) [0x0x85b384]\n\t(No symbol) [0x0x87cba7]\n\t(No symbol) [0x0x85afc6]\n\t(No symbol) [0x0x82c2ca]\n\t(No symbol) [0x0x82d154]\n\tGetHandleVerifier [0x0xc57353+2521315]\n\tGetHandleVerifier [0x0xc522d3+2500707]\n\tGetHandleVerifier [0x0xa27c94+229924]\n\tGetHandleVerifier [0x0xa181f8+165768]\n\tGetHandleVerifier [0x0xa1ecad+193085]\n\tGetHandleVerifier [0x0xa08158+100072]\n\tGetHandleVerifier [0x0xa082f0+100480]\n\tGetHandleVerifier [0x0x9f25aa+11066]\n\tBaseThreadInitThunk [0x0x75ca5d49+25]\n\tRtlInitializeExceptionChain [0x0x7793d6db+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7793d661+561]\n\n", "trace": "  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"D:\\Code Playground\\Selenium Tutorial\\PYTEST\\pages\\Purchase_Invoice.py\", line 88, in generate_invoice\n    save_invoice_btn.click()\n    ~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 119, in click\n    self._execute(Command.CLICK_ELEMENT)\n    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 572, in _execute\n    return self._parent.execute(command, params)\n           ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 458, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"d:\\Code Playground\\Selenium Tutorial\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 233, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1761910630296, "stop": 1761910653924}], "attachments": [{"name": "Error Screenshot", "source": "c7877193-4c10-4823-b38c-b43924a222b4-attachment.png", "type": "image/png"}, {"name": "Error Details", "source": "f75020d7-3d18-49d0-b577-1201a34f7c85-attachment.txt", "type": "text/plain"}, {"name": "Screenshot_test_generate_purchase_invoice", "source": "5ca081d7-ce7c-45b1-91b7-178797ec393c-attachment.png", "type": "image/png"}], "start": 1761910619084, "stop": 1761910654053, "uuid": "df88be6c-95d9-4301-94da-52dadcca1731", "historyId": "bb6aeb3ebb9b82bca2a2d982c322c3ae", "testCaseId": "bb6aeb3ebb9b82bca2a2d982c322c3ae", "fullName": "PYTEST.tests.Purchase_Inv_test#test_generate_purchase_invoice", "labels": [{"name": "parentSuite", "value": "PYTEST.tests"}, {"name": "suite", "value": "Purchase_Inv_test"}, {"name": "host", "value": "DESKTOP-FK66NC3"}, {"name": "thread", "value": "16344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "PYTEST.tests.Purchase_Inv_test"}], "titlePath": ["PYTEST", "tests", "Purchase_Inv_test.py"]}